===================================
Field Service Recurring Work Orders
===================================

.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Ffield--service-lightgray.png?logo=github
    :target: https://github.com/OCA/field-service/tree/15.0/fieldservice_recurring
    :alt: OCA/field-service
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/field-service-15-0/field-service-15-0-fieldservice_recurring
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png
    :target: https://runbot.odoo-community.org/runbot/264/15.0
    :alt: Try me on Runbot

|badge1| |badge2| |badge3| |badge4| |badge5| 

This module allows you to manage your recurring field service work orders

Recurring settings are configured via the FSM Frequency model. Multiple
FSM Frequency can be combined on a FSM Frequency Rule Set which enables
highly configurable recurring rules calculated using the dateutil rrule
python library.

**Table of contents**

.. contents::
   :local:

Installation
============

To install Field Service and have the mapping features, you need to install GeoEngine.

Please refer to the installation instructions available at:
https://github.com/OCA/geospatial/tree/12.0/base_geoengine

Configuration
=============

To configure this module, you need to:

* Setup your Frequencies to establish recurring rules

1. In fieldservice app go to Menu > Configuration > Orders > Frequencies
2. Create a Frequency
3. Setup your Frequency by giving it a descriptive name, set your interval
   and the interval type. Use the additional settings to build a recurring rule
   based on python's dateutil rrule parameters.


* Setup your Frequency Rule Sets used to calculate recurring order dates

1. In fieldservice app go to Menu > Configuration > Orders > Frequency Rule Set
2. Create a Frequency Rule Set
3. Setup your Frequency Rule by first giving it a descriptive name. Complete
   the form by entering the number of days ahead this rule will schedule work.
4. Finally, choose which Frequencies this rule will use to compute the dates
   used for scheduling.


* Setup your recurring order templates to define standard recurring orders

1. In fieldservice app go to Menu > Configuration > Orders > Recurring Templates
2. Name the template and set fields to define which order template is repeated
   and what Frequency Rule Set will be used

Usage
=====

To use this module, you need to:

* In fieldservice app go to Menu > Operations > Recurring Orders
* Create a new Recurring Order model
* Select a Recurring Template and modify as needed.
* Set other fields for fsm location, etc
* Confirm the recurrence to create first order
* Future orders will be created via cron task

Known issues / Roadmap
======================

The roadmap of the Field Service application is documented on
`Github <https://github.com/OCA/field-service/issues/1>`_.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/field-service/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us smashing it by providing a detailed and welcomed
`feedback <https://github.com/OCA/field-service/issues/new?body=module:%20fieldservice_recurring%0Aversion:%2015.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Brian McMaster
* Open Source Integrators

Contributors
~~~~~~~~~~~~

* Brian McMaster <brian@mcmpest.com>
* Kitti Upariphutthiphone <kittiu@ecosoft.co.th>
* RaphaÃ«l Reverdy <raphael.reverdy@akretion.com>
* Freni Patel <fpatel@opensourceintegrators.com>

Other credits
~~~~~~~~~~~~~

The development of this module has been financially supported by:

* Open Source Integrators <https://opensourceintegrators.com>

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

.. |maintainer-wolfhall| image:: https://github.com/wolfhall.png?size=40px
    :target: https://github.com/wolfhall
    :alt: wolfhall
.. |maintainer-max3903| image:: https://github.com/max3903.png?size=40px
    :target: https://github.com/max3903
    :alt: max3903
.. |maintainer-brian10048| image:: https://github.com/brian10048.png?size=40px
    :target: https://github.com/brian10048
    :alt: brian10048

Current `maintainers <https://odoo-community.org/page/maintainer-role>`__:

|maintainer-wolfhall| |maintainer-max3903| |maintainer-brian10048| 

This module is part of the `OCA/field-service <https://github.com/OCA/field-service/tree/15.0/fieldservice_recurring>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
